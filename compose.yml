services:
  server:
    restart: always
    build:
      dockerfile: "./server.Dockerfile"
      context: "./server"
    image: 7cav/cavapps-server:latest
    container_name: apps-server
    ports:
      - "4000:4000"
    enviornment:
      API_TOKEN:
      CLIENT_TOKEN:
    working_dir: /server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://server:4000"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks: mynetwork

  client:
    restart: always
    build:
      context: ./client
      dockerfile: ./client.Dockerfile
    image: 7cav/cavapps-client:latest
    container_name: apps-client
    ports:
      - "80:3000"
    enviornment:
      NEXT_PUBLIC_CLIENT_TOKEN:
      COMBAT_API_URL: http://server:4000/roster/combat
      RESERVE_API_URL: http://server:4000/roster/reserves
      NEXT_PUBLIC_INDIVIDUAL_API_URL: http://server:4000/roster/individual
      CACHE_TIMESTAMP_URL: http://server:4000/cache-timestamp
      GROUP_API_URL: http://server:4000/roster/groups
    working_dir: /client
    depends_on:
      server:
        condition: service_healthy
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
    external: true
